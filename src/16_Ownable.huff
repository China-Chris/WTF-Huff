// Adapted from <https://github.com/huff-language/huffmate/blob/main/src/auth/Owned.huff>

/* 接口 */
#define function changeOwner(address) nonpayable returns ()
#define function owner() view returns (address)

/* 事件 */
#define event OwnerUpdated(address indexed user, address indexed newOwner)

/* 存储槽位 */
#define constant OWNER = FREE_STORAGE_POINTER()

/* 构造器 */
#define macro CONSTRUCTOR() = takes (0) returns (0) {
    // 初始化时，将部署者设为owner
    caller                      // [caller]
    dup1                        // [caller, caller]
    [OWNER]                     // [OWNER, caller, caller]
    sstore                      // [caller]

    // 释放OwnerUpdated事件
    0x00                      // [0, caller]
    __EVENT_HASH(OwnerUpdated)  // [sig, 0, caller]
    0x00 0x00                   // [0, 0, sig, 0, caller]
    log3                        // []
}

// OnlyOwner修饰器
#define macro ONLY_OWNER() = takes (0) returns (0) {
    // 对比caller和Owner，如果不一样，则revert；如果一样，则跳转到auth，继续接下来的逻辑
    caller                      // [msg.sender]
    [OWNER] sload               // [owner, msg.sender]
    eq authed jumpi             // [authed]

    // 不是owner，就revert
    0x00 0x00 revert

    authed:
}

// 修改Owner
#define macro CHANGE_OWNER() = takes (0) returns (0) {
  // 只有owner可以调用
  ONLY_OWNER()

  // 设置新owner
  0x04 calldataload           // [newOwner]
  dup1                        // [newOwner, newOwner]
  [OWNER] sstore              // [newOwner]

  // 释放OwnerUpdated事件
  caller                      // [from, newOwner]
  __EVENT_HASH(OwnerUpdated)  // [sig, from, newOwner]
  0x00 0x00                   // [0, 32, sig, from, newOwner]
  log3                        // []

  stop
}

// 读取owner地址
#define macro OWNER() = takes (0) returns (0) {
    [OWNER] sload                  // [owner]
    0x00 mstore                    // []
    0x20 0x00 return
}

// 合约的主入口，判断调用的是哪个函数
#define macro MAIN() = takes (0) returns (0) {
    // 通过selector判断要调用哪个函数
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(changeOwner) eq change_owner jumpi
    dup1 __FUNC_SIG(owner)    eq owner jumpi
    // 如果没有匹配的函数，就revert
    0x00 0x00 revert

    change_owner:
        CHANGE_OWNER()
    owner:
        OWNER()
}